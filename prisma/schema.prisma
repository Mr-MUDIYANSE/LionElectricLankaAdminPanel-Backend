// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_P7r0kfDnUXiL@ep-lingering-mode-a1naztvf-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model Admin {
  id                 Int       @id @default(autoincrement())
  first_name         String    @db.VarChar(20)
  last_name          String    @db.VarChar(20)
  username           String    @unique @db.VarChar(20)
  email              String    @unique @db.VarChar(100)
  password           String    @db.VarChar(100)
  code               String?   @db.VarChar(50)
  reset_token        String?   @db.VarChar(100)
  reset_token_expiry DateTime?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  status_id          Int
  status             Status    @relation(fields: [status_id], references: [id])
}

model Customer {
  id         Int         @id @default(autoincrement())
  name       String      @db.Text
  email      String?     @db.VarChar(100)
  contact_no String      @unique @db.VarChar(20)
  address    String      @db.Text
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  status_id  Int
  status     Status      @relation(fields: [status_id], references: [id])
  invoices   Invoice[]
  quotation  Quotation[]
}

model Vendor {
  id           Int      @id @default(autoincrement())
  company_name String   @unique @db.Text
  email        String?  @db.VarChar(100)
  contact_no   String   @db.VarChar(50)
  address      String   @db.Text
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  status_id    Int
  status       Status   @relation(fields: [status_id], references: [id])
  stock        Stock[]
}

model Status {
  id            Int             @id @default(autoincrement())
  status        String          @db.VarChar(10)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  admin         Admin[]
  customer      Customer[]
  product       Product[]
  main_category Main_Category[]
  stock         Stock[]
  vendor        Vendor[]
  Quotation     Quotation[]
}

model Brand {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(45)
  product    Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Phase {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Speed {
  id         Int       @id @default(autoincrement())
  speed      String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  product    Product[]
}

model Motor_Type {
  id         Int       @id @default(autoincrement())
  type       String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Size {
  id         Int       @id @default(autoincrement())
  size       String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Gear_Box_Type {
  id         Int       @id @default(autoincrement())
  type       String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Main_Category {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(45)
  status_id  Int
  status     Status    @relation(fields: [status_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Product {
  id               Int      @id @default(autoincrement())
  title            String   @db.Text
  description      String   @db.Text
  warranty         String   @db.VarChar(20)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  brand_id         Int
  status_id        Int
  phase_id         Int?
  speed_id         Int?
  motor_type_id    Int?
  size_id          Int?
  gear_box_type_id Int?
  main_category_id Int

  brand         Brand          @relation(fields: [brand_id], references: [id])
  status        Status         @relation(fields: [status_id], references: [id])
  phase         Phase?         @relation(fields: [phase_id], references: [id])
  speed         Speed?         @relation(fields: [speed_id], references: [id])
  motor_type    Motor_Type?    @relation(fields: [motor_type_id], references: [id])
  size          Size?          @relation(fields: [size_id], references: [id])
  gear_box_type Gear_Box_Type? @relation(fields: [gear_box_type_id], references: [id])
  main_category Main_Category  @relation(fields: [main_category_id], references: [id])
  stocks        Stock[]
}

model Stock {
  id                 Int      @id @default(autoincrement())
  unit_buying_price  Float
  unit_selling_price Float
  qty                Int
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  product_id Int
  status_id  Int
  vendor_id  Int?

  product        Product          @relation(fields: [product_id], references: [id])
  invoice_item   Invoice_Item[]
  status         Status           @relation(fields: [status_id], references: [id])
  vendor         Vendor?          @relation(fields: [vendor_id], references: [id])
  Quotation_Item Quotation_Item[]
}

model Payment_Method {
  id         Int       @id @default(autoincrement())
  method     String    @db.VarChar(45)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  invoices   Invoice[]
}

model Payment_Status {
  id         Int       @id @default(autoincrement())
  status     String    @db.VarChar(10)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  invoice    Invoice[]
}

model Invoice {
  id                String         @id
  paid_amount       Float?
  total_amount      Float?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt
  customer_id       Int
  payment_method_id Int
  payment_status_id Int
  cheque_date       String?        @db.VarChar(20)
  invoice_items     Invoice_Item[]

  payment_method Payment_Method  @relation(fields: [payment_method_id], references: [id])
  customer       Customer        @relation(fields: [customer_id], references: [id])
  payment_status Payment_Status? @relation(fields: [payment_status_id], references: [id])
}

model Invoice_Item {
  id            Int      @id @default(autoincrement())
  qty           Int
  selling_price Float
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  stock_id      Int
  invoice_id    String

  stock   Stock   @relation(fields: [stock_id], references: [id])
  invoice Invoice @relation(fields: [invoice_id], references: [id])
}

model Quotation {
  id              String           @id @default(uuid())
  total_amount    Float?
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  customer_id     Int
  status_id       Int
  quotation_items Quotation_Item[]

  customer Customer @relation(fields: [customer_id], references: [id])
  status   Status   @relation(fields: [status_id], references: [id])
}

model Quotation_Item {
  id            Int      @id @default(autoincrement())
  qty           Int
  selling_price Float
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  stock_id      Int
  quotation_id  String?

  stock     Stock      @relation(fields: [stock_id], references: [id])
  quotation Quotation? @relation(fields: [quotation_id], references: [id])
}
